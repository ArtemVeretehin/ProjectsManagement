@using ProjectsManagement.Models;
@model List<Employee>

<html>
<head>

</head>

<body>
    <div class="popup" id="employee_popup">
        <div class="popup_container">
            <div class="popup_body" id="popup_body">

                @if (Model.Count != 0)
                {
                    <table>
                        <tbody>
                            @for (int i = 0; i < Model.Count; i++)
                            {
                                string getEmployeeArgument = $"{Model[i].Id},'{Model[i].FirstName}','{Model[i].SurName}','{Model[i].LastName}','{Model[i].Email}'";
                                <tr id="@Model[i].Id" onclick="ActiveCheck()">
                                    <td>@Model[i].FirstName</td>
                                    <td>@Model[i].LastName</td>
                                    <td>@Model[i].SurName</td>
                                    <td>@Model[i].Email</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>Список сотрудников пуст</p>
                }

                <button id="ChangeLead">Назначить руководителя</button>
                <div class="popup_close" id="employee_popup_close">X</div>
            </div>
        </div>
    </div>
</body>
</html>


<script>

    //Обработчик события для кнопки закрытия попапа
    document.getElementById('employee_popup_close').addEventListener('click', () => {
        document.getElementById('employee_popup').classList.remove('active');
    })

    //Вызов функции добавления сотрудника
    document.getElementById("ChangeLead").addEventListener("click", async () => {
        const ProjectId = document.getElementById("ProjectId").value;
        await ChangeLead(ProjectId);
    });


    //Функция добавления сотрудника в проект
    function ChangeLead(ProjectId) {
        console.log("Change Begin");
        let SelectedEmployeeId = document.querySelector(".EmployeeRowSelected").id;
        
        $.post('/Project/ChangeLead', { 'SelectedEmployeeId': SelectedEmployeeId, 'ProjectId': ProjectId });
    }

    //Функция проверки выбран сотрудник или нет
    function ActiveCheck() {

        const SelectedRow = event.currentTarget;
        if (SelectedRow.classList.contains('EmployeeRowSelected')) {
            SelectedRow.classList.remove('EmployeeRowSelected');
        }
        else {
            if (document.querySelector(".EmployeeRowSelected") !== null) document.querySelector(".EmployeeRowSelected").classList.remove("EmployeeRowSelected"); 
            SelectedRow.classList.add('EmployeeRowSelected');
        }
    }

</script>